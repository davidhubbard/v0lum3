# Copyright 2017 David Hubbard. All rights reserved.
# Licensed under the GPL v3.

config("glfw_config") {
  include_dirs = [
    "include",
    "deps",
  ]
}

# gn help source_set # source_set() is cool! Skip "ar rcs" plus other benefits!
source_set("glfw") {
  defines = [
    "_GLFW_BUILD_DLL",
    "__GLFW_USE_HYBRID_HPG",
  ]

  configs -= [ "//gn:warnings" ]

  # suppress compiler warnings since glfw is a vendor lib
  cflags = []
  cflags += [
    "-Wno-int-conversion",
    "-Wno-implicit-function-declaration",
    "-Wno-sign-compare",
    "-Wno-unused-parameter",
  ]

  sources = [
    "src/context.c",
    "src/init.c",
    "src/input.c",
    "src/monitor.c",
    "src/vulkan.c",
    "src/window.c",

    "deps/glad.c",
    "deps/getopt.c",
  ]

  if (is_mac) {
    defines += [
      "_GLFW_COCOA",
      "_GLFW_USE_RETINA",
    ]

    libs = [
      "Cocoa.framework",
      "CoreFoundation.framework",
      "CoreGraphics.framework",
      "CoreVideo.framework",
      "IOKit.framework",
      "OpenGL.framework",
    ]

    sources += [
      "src/cocoa_init.m",
      "src/cocoa_joystick.m",
      "src/cocoa_monitor.m",
      "src/cocoa_window.m",
      "src/cocoa_time.c",
      "src/nsgl_context.m",
      "src/osmesa_context.c",
      "src/posix_tls.c",
    ]
  } else if (is_linux) {
    defines += [
      "_GLFW_X11",
    ]

    libs = [
      "X11",
      "Xinerama",
      "Xcursor",
      "Xrandr",
    ]

    sources += [
      "src/egl_context.c",
      "src/glx_context.c",
      "src/linux_joystick.c",
      "src/osmesa_context.c",
      "src/posix_time.c",
      "src/posix_tls.c",
      "src/x11_init.c",
      "src/x11_monitor.c",
      "src/x11_window.c",
      "src/xkb_unicode.c",
    ]
  }

  all_dependent_configs = [
    ":glfw_config"
  ]
}

